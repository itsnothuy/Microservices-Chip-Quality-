repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-json
      - id: check-merge-conflict
      - id: check-toml
      - id: debug-statements
      - id: detect-private-key

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-PyYAML]
        exclude: ^(docs/|scripts/|tests/)

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]

  - repo: https://github.com/psf/black-pre-commit-mirror
    rev: 23.11.0
    hooks:
      - id: black-jupyter

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [-d, relaxed]

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint

  # Custom quality validation hooks
  - repo: local
    hooks:
      - id: validate-python-imports
        name: Validate critical Python imports
        entry: python -c "
try:
    from services.shared.models import *
    from services.shared.database import *
    from services.shared.enums import *
    print('✅ All critical imports successful')
except ImportError as e:
    print(f'❌ Import validation failed: {e}')
    exit(1)
"
        language: system
        files: ^services/.*\.py$
        pass_filenames: false
      
      - id: check-test-coverage
        name: Check test coverage requirements
        entry: tools/quality/check-test-coverage.py
        language: python
        files: ^(services|tests)/.*\.py$
        pass_filenames: false
        additional_dependencies: [pytest, pytest-cov]
      
      - id: validate-api-contracts
        name: Validate API contracts
        entry: tools/quality/validate-api-contracts.py
        language: python
        files: ^services/.*\.py$
        pass_filenames: false
        additional_dependencies: [fastapi, pydantic]
      
      - id: check-model-migrations
        name: Check database model consistency
        entry: tools/quality/check-model-migrations.py
        language: python
        files: ^services/shared/models/.*\.py$
        pass_filenames: false
        additional_dependencies: [alembic, sqlalchemy]
      
      - id: validate-implementation-completeness
        name: Validate implementation completeness
        entry: tools/quality/validate-implementation.py
        language: python
        args: [--quick-check]
        files: ^(services|docs|tests)/.*$
        pass_filenames: false
        stages: [pre-push]
      
      - id: quality-gate-check
        name: Quality gate validation
        entry: tools/quality/quality-gate-check.py
        language: python
        always_run: true
        pass_filenames: false
        stages: [pre-push]
        args: [--fix]

  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: [--ignore, DL3008, --ignore, DL3009]

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.0
    hooks:
      - id: gitleaks

  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [services/, --tb=short, -q]
        stages: [commit]

      - id: safety-check
        name: safety-check
        entry: safety
        language: system
        args: [check, --json]
        files: requirements.*\.txt$
        stages: [commit]

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false